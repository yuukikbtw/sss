#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üåê Habit Tracker - Static File Server
–ö—Ä–∞—Å–∏–≤—ã–π —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä —Å CORS –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
"""

from http.server import HTTPServer, SimpleHTTPRequestHandler
import os
import json
import sys

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
def load_config():
    config_path = os.path.join(os.path.dirname(__file__), 'config.json')
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        return {"static": {"port": 8000, "host": "localhost"}}

config = load_config()

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
script_dir = os.path.dirname(os.path.abspath(__file__))
os.chdir(script_dir)

class CORSRequestHandler(SimpleHTTPRequestHandler):
    """–£–ª—É—á—à–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å CORS –∏ –∫—Ä–∞—Å–∏–≤—ã–º–∏ –ª–æ–≥–∞–º–∏"""
    
    def end_headers(self):
        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã–π CORS –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With')
        self.send_header('Access-Control-Allow-Credentials', 'true')
        self.send_header('Cache-Control', 'no-cache, no-store, must-revalidate')
        self.send_header('Pragma', 'no-cache')
        self.send_header('Expires', '0')
        super().end_headers()

    def do_OPTIONS(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ preflight –∑–∞–ø—Ä–æ—Å–æ–≤"""
        self.send_response(200)
        self.end_headers()
    
    def do_GET(self):
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ index.html
        if self.path == '/':
            self.path = '/index.html'
        super().do_GET()
    
    def log_message(self, format, *args):
        """–ö—Ä–∞—Å–∏–≤—ã–µ –ª–æ–≥–∏ –∑–∞–ø—Ä–æ—Å–æ–≤"""
        sys.stdout.write(f"üìÑ {self.address_string()} - {format % args}\n")

if __name__ == '__main__':
    port = config["static"]["port"]
    host = config["static"]["host"]
    
    print("\n" + "="*70)
    print("           üåê HABIT TRACKER - STATIC SERVER")
    print("="*70)
    print(f"\nüì° –°–µ—Ä–≤–µ—Ä:        http://{host}:{port}")
    print(f"üè† –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:    {os.getcwd()}")
    print(f"üîó –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:    http://{host}:{port}/index.html")
    print(f"üéØ API Backend:   http://localhost:5001/api")
    print("\nüì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    
    files = sorted([f for f in os.listdir('.') if f.endswith(('.html', '.js', '.css', '.json', '.png', '.ico'))])
    for i, file in enumerate(files, 1):
        icon = {'html': 'üìÑ', 'js': '‚ö°', 'css': 'üé®', 'json': '‚öôÔ∏è', 'png': 'üñºÔ∏è', 'ico': 'üñºÔ∏è'}
        ext = file.split('.')[-1]
        print(f"   {icon.get(ext, 'üìÑ')} {file}")
    
    print("\n" + "="*70)
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print("="*70 + "\n")
    
    server = HTTPServer((host, port), CORSRequestHandler)
    try:
        server.serve_forever()
    except KeyboardInterrupt:
        print("\n\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        server.server_close()
        sys.exit(0)