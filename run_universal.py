#!/usr/bin/env python3
"""
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Habit Tracker
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—É—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
"""
import os
import sys
import subprocess
import time
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫"""
    required = ['flask', 'pymongo']
    missing = []
    
    for module in required:
        try:
            __import__(module)
        except ImportError:
            missing.append(module)
    
    return missing

def install_dependencies():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt"""
    requirements_file = Path(__file__).parent / 'requirements.txt'
    if requirements_file.exists():
        print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
        subprocess.run([sys.executable, '-m', 'pip', 'install', '-r', str(requirements_file)])
    else:
        print("‚ö†Ô∏è  requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã...")
        subprocess.run([sys.executable, '-m', 'pip', 'install', 'flask', 'pymongo'])

def main():
    print("üöÄ Habit Tracker - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫")
    print("=" * 50)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
    script_dir = Path(__file__).parent
    os.chdir(script_dir)
    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {script_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤–µ—Ä—Å–∏—é
    python_version = f"{sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}"
    print(f"üêç Python –≤–µ—Ä—Å–∏—è: {python_version}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    missing = check_dependencies()
    if missing:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: {', '.join(missing)}")
        install_dependencies()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑
        missing = check_dependencies()
        if missing:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: {', '.join(missing)}")
            return 1
    
    print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä—ã
    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä—ã...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º Flask API
        print("üîå –ó–∞–ø—É—Å–∫–∞–µ–º Flask API —Å–µ—Ä–≤–µ—Ä...")
        api_process = subprocess.Popen([sys.executable, 'py.py'])
        time.sleep(3)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä
        print("üåê –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä...")
        static_process = subprocess.Popen([sys.executable, 'static_server.py'])
        time.sleep(2)
        
        print("\n‚úÖ –°–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!")
        print("üåç –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8000")
        print("üîå API —Å–µ—Ä–≤–µ—Ä:     http://localhost:5001")
        print("\nüî¥ –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤")
        
        # –ñ–¥–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
        try:
            api_process.wait()
        except KeyboardInterrupt:
            print("\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä—ã...")
            api_process.terminate()
            static_process.terminate()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())